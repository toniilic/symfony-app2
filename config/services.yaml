# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\SecurityController:
        decorates: 'fos_user.security.controller'
        arguments: ['@security.csrf.token_manager']
    app.form.registration:
        class: App\Form\Type\RegistrationFormType
        tags:
            - { name: form.type, alias: app_user_registration }
    App\Bundle\UserBundle\Controller\ChangePasswordController:
        decorates: 'fos_user.change_password.controller'
        arguments:
            $formFactory: '@fos_user.registration.form.factory'

    App\Controller\ProfileController:
        decorates: 'fos_user.profile.controller'
        arguments:
            $formFactory: '@fos_user.registration.form.factory'

    admin.blog_post:
        class: App\Admin\BlogPostAdmin
        arguments: [~, App\Entity\BlogPost, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Blog post' }
    admin.task:
        class: App\Admin\TaskAdmin
        arguments: [~, App\Entity\Task, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Task' }
    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Category }
    admin.bonus:
        class: App\Admin\BonusAdmin
        arguments: [~, App\Entity\Bonus, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Bonus' }
    admin.casino:
        class: App\Admin\CasinoAdmin
        arguments: [~, App\Entity\Casino, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Casino' }
